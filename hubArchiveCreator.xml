<tool id="hubArchiveCreator" name="Hub Archive Creator" version="1.9.0">
    <description>
        This Galaxy tool permits to prepare your files to be ready for
        Assembly Hub visualization.
    </description>

    <requirements>
        <requirement type="package" version="312">ucsc_tools</requirement>
        <requirement type="package" version="0.0.1">gff3ToGenePred</requirement>
        <requirement type="package" version="0.0.1">genePredToBed</requirement>
    </requirements>

    <stdio>
        <regex match="^pass1"
               source="stderr"
               level="log"
               description="bedToBigBed" />
        <!-- TODO: Add the case pass1 and 0 chroms -->
        <!-- TODO: Add the case pass2 and 0 records or 0 fields -->
    </stdio>

    <!-- Idea: python \ -augustus [parameters] \ -trfBig [parameters] -->
    <command detect_errors="exit_code"><![CDATA[
        mkdir -p $output.files_path &&
        python $__tool_directory__/hubArchiveCreator.py

        #for $i, $f in enumerate( $format )
            #if $f.formatChoice.format_select == "g_f"
                #if $f.formatChoice.g_formatChoice.g_f_select == "gtf"
                    --gtf $f.formatChoice.g_formatChoice.GTF
                #end if
                #if $f.formatChoice.g_formatChoice.g_f_select == "gff"
                    -g $f.formatChoice.g_formatChoice.GFF3
                #end if
            #end if
            #if $f.formatChoice.format_select == "bed"
                #if $f.formatChoice.bedChoice.bed_select == "bed"
                    -b $f.formatChoice.bedChoice.BED
                #end if
                #if $f.formatChoice.bedChoice.bed_select == "bed_simple_repeats_option"
                    -t $f.formatChoice.bedChoice.BED_simple_repeats
                #end if
            #end if
        #end for
        -f $Fasta_File -d $__tool_directory__ -e $output.files_path -o $output;
    ]]></command>

    <inputs>
        <param
            format="fasta"
            name="Fasta_File"
            type="data"
            label="Reference genome"
            />
        <repeat name="format" title="Formats">
            <conditional name="formatChoice">
                <param name="format_select" type="select" label="Format">
                    <option value="g_f" selected="true">G*F - General * Format</option>
                    <option value="bed">BED</option>
                </param>

                <when value="g_f">
                    <conditional name="g_formatChoice">
                        <param name="g_f_select" type="select" label="General Format Choice">
                            <option value="gtf" selected="true">GTF</option>
                            <option value="gff3">GFF</option>
                        </param>
                        <when value="gtf">
                            <param
                                format="gtf"
                                name="GTF"
                                type="data"
                                label="GTF - General Transfer Format"
                            />
                        </when>
                        <when value="gff3">
                            <param
                                format="gff3"
                                name="GFF3"
                                type="data"
                                label="GFF3 - General Feature Format 3"
                            />
                        </when>
                    </conditional>
                </when>
                <when value="bed">
                    <conditional name="bedChoice">
                        <param name="bed_select" type="select" label="Bed Choice">
                            <option value="bed" selected="true">Generic BED</option>
                            <option value="bed_simple_repeats_option">BED simple repeats</option>
                        </param>
                        <when value="bed">
                           <!-- TODO -->
                           <param
                               format="bed"
                               name="BED"
                               type="data"
                               label="Generic Bed File Choice"
                            />
                        </when>
                        <when value="bed_simple_repeats_option">
                            <param
                                format="bed"
                                name="BED_simple_repeats"
                                type="data"
                                label="Bed Simple Repeats (Bed4+12) File"
                            />
                        </when>
                    </conditional>
                </when>
            </conditional>
        </repeat>
    </inputs>

    <outputs>
        <data format="huba" name="output" />
    </outputs>

    <tests>
        <test>
            <param name="Fasta_File" value="dbia3.fa"/>
            <repeat name="format">
                <conditional name="formatChoice">
                    <param name="format_select" value="gff3"/>
                    <param name="GFF3" value="augustusDbia3.gff3"/>
                </conditional>
            </repeat>
            <repeat name="format">
                <param name="BED_simple_repeats" value="dbia3_trfBig_unsorted.bed"/>
                <!-- TODO: Ask why the tests are not passing with this xml:
                     Error creating a job for these tool inputs - Error executing tool: 'NoneType' object has no attribute 'current_history'
                <conditional name="formatChoice">
                    <param name="format_select" value="bed"/>
                    <conditional name="bedChoice">
                        <param name="bed_select" value="bed_simple_repeats_option"/>
                        <param name="BED_simple_repeats" value="dbia3_trfBig_unsorted.bed"/>
                    </conditional>
                </conditional>
                -->
            </repeat>

            <output name="output">
                <assert_contents>
                    <has_text text="myHub" />
                </assert_contents>
                <assert_contents>
                    <has_text text="dbia3_trfBig.bb" />
                </assert_contents>
                <assert_contents>
                    <has_text text="SAODOAii qwwqod92921"/>
                </assert_contents>
            </output>
        </test>
    </tests>

    <help>
        This Galaxy tool permits to prepare your files to be ready for
        Assembly Hub visualization.
    </help>
</tool>
